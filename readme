# Jenkins on Kubernetes

This repository contains the necessary files to deploy Jenkins on a Kubernetes cluster using YAML resources.

Create cluster
`minikube start --driver=virtualbox --cpus=4 --memory=8192 --disk-size=40g`

Create and select namespaces jenkins
`kubectl create namespace jenkins`
`kubens jenkins`

Set cluster for Sonar
`minikube ssh`
`sudo sysctl -w vm.max_map_count=262144`
`exit`

Enable ingress
`minikube addons enable ingress`

Update /etc/hosts
`minikube ip` jenkins.local sonarqube.local nexus.local

## Included files

- `jenkins-deployment.yaml`: Jenkins Deployment.
- `jenkins-service.yaml`: Service to expose Jenkins within the cluster.
- `jenkins-ingress.yaml`: Ingress rules for external access (optional).
- `jenkins-pv.yaml`: Persistent Volume for data storage.
- `jenkins-pvc.yaml`: Persistent Volume Claim.

## Quick deployment

1. Apply the resources in the following order:
   ```bash
   kubectl apply -f jenkins-pv.yaml
   kubectl apply -f jenkins-pvc.yaml
   kubectl apply -f jenkins-deployment.yaml
   kubectl apply -f jenkins-service.yaml
   # Optional, if you use Ingress
   kubectl apply -f jenkins-ingress.yaml
   kubectl apply -f sonarqube-db-secret.yaml
   kubectl apply -f sonarqube-postgres.yaml
   kubectl apply -f sonarqube-deployment.yaml
   kubectl apply -f nexus.yaml
   kubectl apply -f devtools-ingress.yaml
   ```

2. Access Jenkins according to your Service or Ingress configuration.

## Notes

- Make sure you have the proper storage configured in your cluster.
- Modify the YAML files as needed (resources, paths, etc).

## Useful commands to remember

- Get all pods:
  ```bash
  kubectl get pods
  ```
- Get all services:
  ```bash
  kubectl get svc
  ```
- Describe a pod:
  ```bash
  kubectl describe pod <pod-name>
  ```
- View logs for a pod:
  ```bash
  kubectl logs <pod-name>
  ```
- Port-forward Jenkins service to localhost:
  ```bash
  kubectl port-forward svc/jenkins 8080:8080
  ```
- Get Jenkins password:
    kubectl exec --namespace jenkins -it $(kubectl get pod -n jenkins -l app=jenkins -o jsonpath="{.items[0].metadata.name}") -- cat /var/jenkins_home/secrets/initialAdminPassword

---
Author: rvbasulto

## Jenkins JDK Configuration

To configure multiple JDK versions in Jenkins:

- **JDK11** → `/opt/jdks/jdk-11`
- **JDK17** → `/opt/jdks/jdk-17`
- **JDK21** → `/opt/jdks/jdk-21`


Para crear un imagePullSecret
kubectl create secret docker-registry nexus-creds \
  --docker-server=nexus.jenkins.svc.cluster.local:5000 \
  --docker-username=admin \
  --docker-password=admin \
  --docker-email=rvazquezbasulto@email.com \
  -n jenkins